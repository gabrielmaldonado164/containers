version: '3'

services:
  traefik:
    image: traefik:v2.8.1
    container_name: traefik
    ports:
      - 80:80 # Traefik HTTP port
      - 443:443 # Traefik HTTPS port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Docker socket
      - ./traefik.yml:/traefik.yml # Traefik configuration file
      - ./acme.json:/acme.json # Traefik lets you use Let's Encrypt to secure your services
      - ./users.txt:/users.txt:ro #Users and passwords for Traefik admin
      - /etc/log/traefik:/var/log/traefik # Traefik logs
    labels:
      - traefik.enable=true  #Enable traefik to proxy this container
      - traefik.http.middlewares.basicauth.basicauth.usersfile=/users.txt #users and passwords for Traefik admin
      - traefik.http.routers.traefik-secure.entrypoints=websecure #Traefik secure entrypoint
      - traefik.http.routers.traefik-secure.rule=Host(`${HOSTNAME}`) # Traefik secure rule
      - traefik.http.routers.traefik-secure.middlewares=basicauth
      - traefik.http.routers.traefik-secure.tls=true # Traefik use ssl
      - traefik.http.routers.traefik-secure.tls.certresolver=letsencrypt # Traefik use Let's Encrypt to secure your services(leetsencrypt -> es el nombre que le pusimos en el archivo de config)
      - traefik.http.routers.traefik-secure.service=api@internal # Enabling the api to be a service to access
    networks:
      - proxy
  
networks:
  proxy:
    name: proxy_net
    driver: bridge # Use the bridge network driver
    ipam:
      driver: default # Use the default IPAM driver

